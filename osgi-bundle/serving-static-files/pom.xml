<?xml version="1.0" encoding="UTF-8"?>

<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.safehaus.subutai.servlet</groupId>
  <artifactId>serving-static-files</artifactId>
  <name>OSGi Sample :: Web App :: Static Files</name>
  <version>1.0</version>
  <modules>
    <module>frontend-parent</module>
  </modules>
  <packaging>pom</packaging>

  <repositories>
    <repository>
      <id>com.springsource.repository.bundles.release</id>
      <name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
      <url>http://repository.springsource.com/maven/bundles/release</url>
    </repository>

    <repository>
      <id>com.springsource.repository.bundles.external</id>
      <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
      <url>http://repository.springsource.com/maven/bundles/external</url>
    </repository>
  </repositories>

  <properties>
    <karaf.version>3.0.2</karaf.version>
    <osgi.framework.version>5.0.0</osgi.framework.version>
    <aries.blueprint.version>1.1.0</aries.blueprint.version>
    <aries.proxy.version>1.0.1</aries.proxy.version>
    <aries.util.version>1.1.0</aries.util.version>
    <com.google.guava.version>16.0.1</com.google.guava.version>
    <org.apache.cxf.version>2.7.12</org.apache.cxf.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>frontend-rest</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <!--Internal karaf dependencies-->
      <dependency>
        <groupId>org.apache.karaf</groupId>
        <artifactId>apache-karaf</artifactId>
        <version>${karaf.version}</version>
        <type>xml</type>
        <classifier>features</classifier>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.compendium</artifactId>
        <version>${osgi.framework.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.core</artifactId>
        <version>${osgi.framework.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.aries.blueprint</groupId>
        <artifactId>org.apache.aries.blueprint</artifactId>
        <version>${aries.blueprint.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.aries.proxy</groupId>
        <artifactId>org.apache.aries.proxy</artifactId>
        <version>${aries.proxy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.aries</groupId>
        <artifactId>org.apache.aries.util</artifactId>
        <version>${aries.util.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.karaf.shell</groupId>
        <artifactId>org.apache.karaf.shell.console</artifactId>
        <version>${karaf.version}</version>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>frontend-war</artifactId>
        <type>war</type>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>frontend-war</artifactId>
        <classifier>classes</classifier>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.2.201409121644</version>
        <configuration>
          <destFile>${sonar.jacoco.reportPath}</destFile>
          <append>true</append>
        </configuration>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <phase>install</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.karaf.tooling</groupId>
          <artifactId>karaf-maven-plugin</artifactId>
          <version>${karaf.version}</version>
          <extensions>true</extensions>
        </plugin>
        <plugin>
          <groupId>org.apache.karaf.tooling</groupId>
          <artifactId>features-maven-plugin</artifactId>
          <version>2.3.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>2.4.0</version>
          <inherited>true</inherited>
          <extensions>true</extensions>
          <configuration>
            <manifestLocation>META-INF</manifestLocation>
            <unpackBundle>true</unpackBundle>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
          <extensions>true</extensions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.4</version>
          <extensions>true</extensions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>2.5.4</version>
          <configuration>
            <!--
                Enables analysis which takes more memory but finds more bugs.
                If you run out of memory, changes the value of the effort element
                to 'Low'.
            -->
            <effort>Max</effort>
            <!-- Build doesn't fail if problems are found -->
            <failOnError>false</failOnError>
            <!-- Reports all bugs (other values are medium and max) -->
            <threshold>Low</threshold>
            <!-- Produces XML report -->
            <xmlOutput>true</xmlOutput>
            <!-- Configures the directory in which the XML report is created -->
            <findbugsXmlOutputDirectory>${project.build.directory}/target/findbugs
            </findbugsXmlOutputDirectory>
          </configuration>
          <executions>
            <!--
                Ensures that FindBugs inspects source code when project is compiled.
            -->
            <execution>
              <id>analyze-compile</id>
              <phase>compile</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xml-maven-plugin</artifactId>
          <version>1.0</version>
          <configuration>
            <transformationSets>
              <transformationSet>
                <!-- Configures the source directory of XML files. -->
                <dir>${project.build.directory}/target/findbugs</dir>
                <!-- Configures the directory in which the FindBugs report is written.-->
                <outputDir>${project.build.directory}/target/findbugs</outputDir>
                <!-- Selects the used stylesheet. -->
                <stylesheet>default.xsl</stylesheet>
                <fileMappers>
                  <!-- Configures the file extension of the output files. -->
                  <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                    <targetExtension>.html</targetExtension>
                  </fileMapper>
                </fileMappers>
              </transformationSet>
            </transformationSets>
          </configuration>
          <executions>
            <!-- Ensures that the XSLT transformation is run when the project is compiled. -->
            <execution>
              <phase>compile</phase>
              <goals>
                <goal>transform</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
